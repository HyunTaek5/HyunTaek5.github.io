# Site
repository: HyunTaek5/HyunTaek5.github.io
favicon: images/favicon.ico

# Content configuration version
version: 2

# Personal info
name: 오현택
title: 백엔드 엔지니어
email: oht1312@gmail.com
website: https://eight20.tistory.com

# Dark Mode (true/false/never)
darkmode: never

# Social links
#twitter_username: facespics
github_username: HyunTaek5
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
linkedin_username: dylanoh
# xing_username: jekyll
# pinterest_username: jekyll
#youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
#additional_links:
#- title: itsgoingto.be
#  icon: fas fa-globe
#  url: https://www.itsgoingto.be
# - title: another link
#   icon: font awesome brand icon name (eg. fab fa-twitter) (https://fontawesome.com/icons?d=gallery&m=free)
#   url: Link url (eg. https://google.com)

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
gtm: "G-2HNCVHLKNS"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
about_title: Summary
about_profile_image: images/profile.png
about_content: | # this will include new lines to allow paragraphs
  3년차 백엔드 개발자로  NestJS, SpringBoot를 활용한 API 서버를 개발 및 배포한 경험이 있습니다.  Docker, AWS EC2, S3 등의 기술을 활용하여 서비스를 개발하고 있습니다. React, NextJs, TailwindCSS를 활용하여 프론트엔드를 구성했던 경험이 있습니다.
  
  새로운 기술 및 지식을 습득하고, 프로젝트 개발 과정에 적용하여 최적화하고, 해당 과정을 기록하는 것을 좋아합니다. 팀 프로젝트, 인턴쉽에서 서비스를 기획, 개발, 배포하였습니다.
  
  반복되는 프로세스를 코드를 통해 자동화하는 것을 좋아합니다. 프로젝트 환경 세팅의 자동화를 통해 프로젝트 세팅에 소요되는 시간을  개선한 경험이 있습니다.
  수동으로 프로젝트 배포하는 프로세스의 자동화를 통해 수동 배포하던 시간을 단축시켰습니다.

content:
  - title: Skill
    layout: list
    content:
      - layout: left
        title: Backend
        description: |
          - TypeScript, Java, Python
          - NestJs, SpringBoot, Django, Flask
          - TypeORM, Spring Data JPA
      - layout: left
        title: DevOps
        description: |
          - MySQL, PostgreSQL
          - AWS S3, EC2, ELB, Cloud Watch, Amplify
          - Docker, Docker-compose
          - Prometheus, Grafana
      - layout: left
        title: Frontend
        description: |
          - TypeScript
          - ReactJS
          - NextJS
          - TailwindCSS

  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: Entropy Paradox
        link: entropyparadox.com
        # link_text: boringcompany.com
        sub_title: 백엔드 엔지니어
        caption: 2021.05 - 현재
        quote: >
          웹/앱 MVP 솔루션 스타트업
        description: | # this will include new lines to allow paragraphs
          - NestJs 기반 백엔드 개발/운영
          - NextJs 기반 프론트엔드 개발
          - 사내 프로젝트 개선
            - Winston 기반 로깅/모니터링 시스템 구축
            - Docker 기반 무중단 배포 자동화 구축
            - 이메일 발송 관리 시스템 개선

  - title: Services # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        border: weak
        title: 타임즈케어
        sub_title: >
          캘린더 구독 및 구매 서비스</br> 2023.07 - 2023.10 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>TypeORM</mark>, <mark>MySQL</mark>, <mark>Redis</mark>, <mark>Jest</mark>, <mark>Mockito</mark>,
          <mark>Docker</mark>, <mark>AWS (EC2, S3, RDS, CloudFront)</mark>, <mark>OneSignal</mark>
        description: |
          NestJs 멀티모듈 기반 백엔드 개발
          - 포트원 API 기반 PG사 인증 결제 구현
          - Jest, Mockito를 활용한 핵심 비즈니스 로직 테스트 도입
          - Swagger를 사용한 HTTP API 문서 자동화

          Redis Queue(BullMq)를 사용한 메세지 기반 푸시 알림 비동기 발송
          - NHN cloud 기반 SMS/이메일/알림톡 발송 구현
          - OneSignal 기반 푸시 알림 구현

          스테이지 / 프로덕션 환경 배포
          - AWS S3, Cloudfront 환경의 프론트 CD
          - Github Action 기반 백엔드 CD

      - layout: left
        border: weak
        title: 고미에너지
        sub_title: >
          에너지 유통 B2B 솔루션 서비스</br> 2023.05 - 2023.08 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>Prisma</mark>, <mark>MySQL</mark>, <mark>Redis</mark>,  
          <mark>Docker</mark>, <mark>AWS (EC2, S3, RDS, CloudFront)</mark>, <mark>OneSignal</mark>
        link: energydelivery.co.kr
        description: |
          NestJs 멀티모듈 기반 백엔드 개발
          - 공동구매 정산 시스템 API/배치 구현
          - 이지페이 기반 가상계좌 결제 구현
          - Redis를 사용하여 가상계좌 결제 승인 리팩토링
          - Prisma를 사용한 DB 스키마 관리
          
          Redis Queue를 사용한 메세지 기반 푸시 알림 비동기 발송
          - NHN cloud 기반 SMS/이메일/알림톡 발송 구현
          - OneSignal 기반 푸시 알림 구현
  
          스테이지 / 프로덕션 환경 배포
          - AWS S3, Cloudfront 환경의 프론트 CD
          - Github Action 기반 백엔드 CD

      - layout: left
        border: weak
        title: 온푸
        sub_title: >
          마담주 과일 브랜드 온라인 스토어</br> 2023.01 - 2023.09 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>TypeORM</mark>, <mark>PostgreSQL</mark>, <mark>Liquibase</mark>, <mark>NextJs</mark>, 
          <mark>React</mark>, <mark>Docker</mark>, <mark>AWS (EC2, ECR, ELB, S3, RDS, SQS)</mark>, <mark>Vercel</mark>
        link: onfu.kr
        description: |
          NestJs 멀티모듈 기반 백엔드 리팩토링
          - NestJs CRUD 모듈로 추상화되어있던 API 서버 리팩토링
          - PG사 모듈 기반 결제를 포트원 API 기반 결제로 리팩토링
          - firebase 기반 푸시알림 로직을 플레어레인 API 기반 푸시 알림으로 리팩토링
          - Liquibase 기반 DB 스키마 버전 관리
          
          NextJs 기반 프론트엔드 개발
          - PWA 구축
          
          프로덕션 AWS 세팅
          - AWS Amplify, Vercel 환경의 프론트 CD
          - Github Action 기반 ECR, Elastic BeanStalk 운영환경 백엔드 CI/CD

      - layout: left
        border: weak
        title: 바나나 파츠
        sub_title: >
          정밀 가공 부품 포털 서비스 <br/> 2022.11 - 현재 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>TypeORM</mark>, <mark>MySQL</mark>, <mark>Docker</mark>, <mark>Redis</mark>, <mark>Jest</mark>, <mark>Mockito</mark>, <mark> AWS (EC2, S3, Amplify, RDS)</mark>, <mark>Vercel</mark>
        link: banana.parts
        description: |
          NestJs 멀티모듈 기반 백엔드 개발
          - Redis Queue를 사용한 메세지 기반 순차 처리 적용
          - Jest, Mockito를 활용한 핵심 비즈니스 로직의 TDD 도입
          - Swagger를 사용한 HTTP API 문서화
          
          스테이지 / 프로덕션 환경 세팅
          - AWS Amplify, Vercel 환경의 프론트 CD
          - Github Action 기반 백엔드 CI/CD
          - Worker Instance, API Instance의 분리를 통한 고가용성 확보

      - layout: left
        border: weak
        title: 어디가지
        sub_title: >
          유저가 만드는 맛집 지도 플랫폼 <br/> 2022.09 - 현재 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>TypeORM</mark>, <mark>PostgresSQL</mark>, <mark>Liquibase</mark>, <mark>Docker</mark>, <mark>GraphQL</mark>
        link: where.review
        description: |
          NestJs 기반 백엔드 신규 기능 개발
          - Liquibase를 통한 DB 스키마 버전 관리
          - 위치 기반 장소 조회 쿼리 개선
          - 현재 위치의 위도/경도 기준으로 주변 장소 조회 기능 구현
          
          NestJs GraphQL 기반 API 서버 리팩토링
          - GraphQL 기반 API 서버를 HTTP 메소드 기반 API 서버로 리팩토링

      - layout: left
        border: weak
        title: 아이힐미 헬릭스
        sub_title: >
          건강 습관 관리 플랫폼 <br/> 2022.04 - 2023.02 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>TypeORM</mark>, <mark>MySQL</mark>, </br>
          <mark>AWS (EC2, S3, Amplify, RDS)</mark>, </br>
          <mark>NHN cloud(sms)</mark>, </br>
          <mark>OneSignal(Push 알림)</mark>
        link: play.google.com/store/apps/details?id=com.ihealmeapp
        description: |
          NestJs 멀티모듈 기반 백엔드 개발
          - NestJs 기반 Http 메소드 API 서버 개발
          - Swagger HTTP API 문서화
          - AWS S3를 활용한 이미지 업로드 API 구현
          - NHN cloud sms 전화번호 인증 API 구현
          - NestJs 스케줄러와 OneSignal Push Noti를 사용한 정기 푸시 알림 구현

          스테이지 / 프로덕션 환경 세팅
          - AWS Amplify를 사용한 프론트 CD
          - Github Action 기반 백엔드 CD

      - layout: left
        border: weak
        title: 링크스토리
        sub_title: >
          해외 대학생 멘토링 플랫폼 <br/> 2022.03 - 2023.01 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>TypeORM</mark>, <mark>PostgreSQL</mark>, </br>
          <mark>React</mark>, <mark>AWS (EC2, S3, SES, ELB, RDS)</mark>, <mark>Stripe</mark>
        link: linkstory.me
        caption:
        description: |
          NestJs 기반 백엔드 리팩토링 및 신규 기능 개발
          - NestJS 7 버전 기반 백엔드 8 버전으로 마이그레이션
          - 7 버전 기준 레거시 8 버전으로 리팩토링
          - Socket/Nest Gateways를 사용한 중복 로그인 방지 기능 구현
          
          Stripe 구독 개발
          - Stripe API 어드민 쿠폰 대시보드와 연동
          - Stripe 카드 구독 로직 구현
          - Stripe API 결제시 쿠폰 동시성 이슈 해결

          React 웹클라이언트 개발
          - 동시 접속 방지 구현
          - Ably 기반 채팅 구현

      - layout: left
        border: weak
        title: 슈퍼스터디
        sub_title: >
          학교 생활 종합 플랫폼 <br/> 2022.01 - 2022.08 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>TypeORM</mark>, <mark>PostgresSQL</mark>, <mark>React</mark>, <mark>AWS(S3)</mark>, <mark>GraphQL</mark>
        link: superstudy.kr
        description: |
          NestJs 기반 백엔드 레거시 리팩토링
            - 기존의 GraphQL로 구성되어있던 레거시 중 조회되는 테이블 수가 3개 이상인 쿼리를 TypeORM Query Builder를 사용하여 HTTP 메소드 기반의 API 형식으로 리팩토링
            - 쿼리 실행 계획의 시각화를 통한 쿼리 개선
            - 조회되는 테이블 수가 3개 이하인 쿼리 중 1 대 N의 관계로 인해 발생되는 슬로우 쿼리를 Data Loader 적용으로 1번의 쿼리로 개선
            - 프론트에서 처리하던 데이터 정렬/필터 로직을 백엔드 쿼리 정렬/필터링 방식으로 전환하여 프론트엔드 성능 개선 (로딩 시간 3초 개선)

          NestJS 기반 백엔드 신규 기능 개발
            - AWS S3를 활용한 Presigned 방식의 이미지 업로드

          React 웹 클라이언트 개발

  - title: Personal Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        border: weak
        title: 그님레 (그래서 님 레이팅이 어떻게 되세요?)
        sub_title: >
          WoT(World of Tanks) 전적/레이팅 시각화 제공 서비스<br/> 2022.10 - 현재 </br>
          </br>
          사용 기술 </br>
          <mark>NestJs</mark>, <mark>TypeORM</mark>, <mark>PostgreSQL</mark>, 
          <mark>Redis</mark>, <mark>Docker</mark>, <mark>Docker-Compose</mark>,
          <mark>Grafana</mark>, <mark>Prometheus</mark>
        link: github.com/GeNimRe
        additional_links:
          - title: GeNimRe-Server
            icon: fab fa-github
            url: github.com/GeNimRe/server
          - title: GeNimRe-Discord-Client
            icon: fab fa-github
            url: github.com/GeNimRe/discord-bot
        description: | # this will include new lines to allow paragraphs
          NestJs 멀티모듈 기반 백엔드 개발
          - Wargaming API 기반 공식 레이팅 계산 배치 구현
          - 전적 데이터 기반 커뮤니티 비공식 레이팅(WN8) 계산 배치 구현
          - Redis를 활용한 중복 유저 전적 조회 관련 캐시 적용
          
          discord.js 기반 디스코드 봇 클라이언트 개발
          
          Prometheus, Grafana를 활용한 서버 리소스 모니터링 적용

      - layout: left
        border: weak
        title: MaskOn(마스크온)
        sub_title: >
          코로나-19 매장내 마스크 착용률 정보를 5분마다 측정하여 매장별로 정리하여 유저에게 제공하는 플랫폼<br/> 2021.01 - 2021.03 </br>
          </br>
          사용 기술 </br>
          <mark>Django</mark>, <mark>Docker</mark>, <mark>MySQL</mark>, <mark>AWS(RDS, EC2, Elastic Beanstalk)</mark>, <mark>Grafana</mark>, <mark>Prometheus</mark>
        link: github.com/Team-Mask-On
        additional_links:
          - title: Team-Mask-On/Mask_On
            icon: fab fa-github
            url: github.com/Team-Mask-On/Mask_On
        description: | # this will include new lines to allow paragraphs
          IoT 기반의 PiCamera를 통한 AI 기술을 활용한 Django 기반 API 서버 개발 및 배포
          - Django/ Docker/ Docker-compose를 활용하여 API 서버 개발
          - DjangoRestFramework를 이용하여 RaspberryPi에서 OpenCV와 YOLOv5를 통해 이미지에서 산출한 로그 및 센서 정보 송수신 구현
          - Django API 서버를 Gunicorn을 활용하여 AWS EC2에 Docker 이미지로 배포
          - AWS EC2에 배포된 서버에 Prometheus와 Grafana를 연동
          - Postman을 통한 API document 작성을 통한 API 문서화(postman)

      - layout: left
        title: Modeul(모들)
        sub_title: >
          단국대 주변 쉐어하우스 임대 업자와 수요자 사이에서 필요한 정보를 제공해주는 서비스 </br> 2020.04 - 2021.02 </br>
          </br>
          사용 기술 </br>
          <mark>Django</mark>, <mark>Docker</mark>, <mark>MySQL</mark>
        link: github.com/MO-DEUL
        additional_links:
          - title: MO-DEUL/Mo_DEUL
            icon: fab fa-github
            url: github.com/MO-DEUL/Mo_DEUL
        description: |
          Django 기반의 백엔드 개발
          - Django / Docker 기반의 CRUD 기능 중심의 API 서버 개발
          - DjangoRestFramework를 활용하여  쉐어하우스 정보 게시판, 호스트 정보, 쉐어하우스 상세 정보 제공 기능 API 구현
          - Django-seed와 Faker를 통한 개발용 fake db 생성 커맨드 구현

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: 단국대학교
        caption: 2020 - 현재
        sub_title: 모바일 시스템 공학과 3학년
      #        quote: >
      #        description: | # this will include new lines to allow paragraphs
      - layout: left
        title: 2021 SiliconValley HeadStarts InternShip
        caption: 2021.01.04 - 02.05
        sub_title: https://github.com/Team-Mask-On

# Footer
footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
  - jekyll-seo-tag
